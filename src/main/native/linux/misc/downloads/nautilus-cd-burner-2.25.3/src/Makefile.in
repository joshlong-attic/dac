# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = nautilus-cd-burner$(EXEEXT)
noinst_PROGRAMS = list_cddrives$(EXEEXT) bcs_test$(EXEEXT) \
	test_blank$(EXEEXT) test_monitor$(EXEEXT) $(am__EXEEXT_1)
subdir = src
DIST_COMMON = $(libnautilus_burninclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/nautilus-burn-features.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = nautilus-burn-features.h
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(nautilus_extensiondir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(libnautilus_burnincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
nautilus_extensionLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES) $(nautilus_extension_LTLIBRARIES)
am__DEPENDENCIES_1 =
libnautilus_burn_extension_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_1 =
am_libnautilus_burn_extension_la_OBJECTS = nautilus-burn-bar.lo \
	burn-extension.lo $(am__objects_1)
libnautilus_burn_extension_la_OBJECTS =  \
	$(am_libnautilus_burn_extension_la_OBJECTS)
libnautilus_burn_extension_la_LINK = $(LIBTOOL) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(libnautilus_burn_extension_la_LDFLAGS) $(LDFLAGS) -o $@
libnautilus_burn_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_2 = nautilus-burn-recorder-marshal.lo
am_libnautilus_burn_la_OBJECTS = nautilus-burn-init.lo \
	nautilus-burn-drive-selection.lo $(am__objects_2) \
	nautilus-burn-process.lo nautilus-burn-recorder.lo \
	nautilus-burn-drive.lo nautilus-burn-drive-monitor.lo \
	$(am__objects_1)
libnautilus_burn_la_OBJECTS = $(am_libnautilus_burn_la_OBJECTS)
libnautilus_burn_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libnautilus_burn_la_LDFLAGS) $(LDFLAGS) -o $@
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
am__EXEEXT_1 =
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_bcs_test_OBJECTS = bcs-test.$(OBJEXT)
bcs_test_OBJECTS = $(am_bcs_test_OBJECTS)
bcs_test_DEPENDENCIES = libnautilus-burn.la
am_list_cddrives_OBJECTS = list_cddrives.$(OBJEXT)
list_cddrives_OBJECTS = $(am_list_cddrives_OBJECTS)
list_cddrives_DEPENDENCIES = libnautilus-burn.la
list_cddrives_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(list_cddrives_LDFLAGS) $(LDFLAGS) -o $@
am__nautilus_cd_burner_SOURCES_DIST = nautilus-cd-burner.c \
	nautilus-cd-burner.h ncb-operation.h ncb-operation.c \
	ncb-progress-dialog.h ncb-progress-dialog.c \
	ncb-rename-dialog.h ncb-rename-dialog.c ncb-selection.h \
	ncb-selection.c ncb-selection-dialog.h ncb-selection-dialog.c \
	nautilus-file-operations-progress-icons.h make-iso.c \
	make-iso.h mkdtemp.c mkdtemp.h
@MKDTEMP_MISSING_TRUE@am__objects_3 = mkdtemp.$(OBJEXT)
am_nautilus_cd_burner_OBJECTS = nautilus-cd-burner.$(OBJEXT) \
	ncb-operation.$(OBJEXT) ncb-progress-dialog.$(OBJEXT) \
	ncb-rename-dialog.$(OBJEXT) ncb-selection.$(OBJEXT) \
	ncb-selection-dialog.$(OBJEXT) make-iso.$(OBJEXT) \
	$(am__objects_3) $(am__objects_1)
nautilus_cd_burner_OBJECTS = $(am_nautilus_cd_burner_OBJECTS)
nautilus_cd_burner_DEPENDENCIES = libnautilus-burn.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_blank_OBJECTS = test_blank.$(OBJEXT)
test_blank_OBJECTS = $(am_test_blank_OBJECTS)
test_blank_DEPENDENCIES = libnautilus-burn.la
test_blank_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(test_blank_LDFLAGS) $(LDFLAGS) -o $@
am_test_monitor_OBJECTS = test-monitor.$(OBJEXT)
test_monitor_OBJECTS = $(am_test_monitor_OBJECTS)
test_monitor_DEPENDENCIES = libnautilus-burn.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libnautilus_burn_extension_la_SOURCES) \
	$(libnautilus_burn_la_SOURCES) $(bcs_test_SOURCES) \
	$(list_cddrives_SOURCES) $(nautilus_cd_burner_SOURCES) \
	$(test_blank_SOURCES) $(test_monitor_SOURCES)
DIST_SOURCES = $(libnautilus_burn_extension_la_SOURCES) \
	$(libnautilus_burn_la_SOURCES) $(bcs_test_SOURCES) \
	$(list_cddrives_SOURCES) \
	$(am__nautilus_cd_burner_SOURCES_DIST) $(test_blank_SOURCES) \
	$(test_monitor_SOURCES)
libnautilus_burnincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libnautilus_burninclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ACLOCAL_AMFLAGS = @ACLOCAL_AMFLAGS@
ALL_LINGUAS = @ALL_LINGUAS@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BURN_CFLAGS = @BURN_CFLAGS@
BURN_LIBS = @BURN_LIBS@
BURN_LT_VERSION = @BURN_LT_VERSION@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DAEMON_CFLAGS = @DAEMON_CFLAGS@
DAEMON_LIBS = @DAEMON_LIBS@
DATADIRNAME = @DATADIRNAME@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXTENSION_CFLAGS = @EXTENSION_CFLAGS@
EXTENSION_LIBS = @EXTENSION_LIBS@
F77 = @F77@
FFLAGS = @FFLAGS@
GCONFTOOL = @GCONFTOOL@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOME_MOUNT_CFLAGS = @GNOME_MOUNT_CFLAGS@
GNOME_MOUNT_LIBS = @GNOME_MOUNT_LIBS@
GREP = @GREP@
GTKDOC_CHECK = @GTKDOC_CHECK@
GUI_CFLAGS = @GUI_CFLAGS@
GUI_LIBS = @GUI_LIBS@
HTML_DIR = @HTML_DIR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_KBD_RULE = @INTLTOOL_KBD_RULE@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_POLICY_RULE = @INTLTOOL_POLICY_RULE@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_PROP_RULE = @INTLTOOL_PROP_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SERVICE_RULE = @INTLTOOL_SERVICE_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_THEME_RULE = @INTLTOOL_THEME_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XAM_RULE = @INTLTOOL_XAM_RULE@
INTLTOOL_XML_NOMERGE_RULE = @INTLTOOL_XML_NOMERGE_RULE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGFMT_OPTS = @MSGFMT_OPTS@
MSGMERGE = @MSGMERGE@
NAUTILUSDIR = @NAUTILUSDIR@
NAUTILUS_BURN_VERSION_MAJOR = @NAUTILUS_BURN_VERSION_MAJOR@
NAUTILUS_BURN_VERSION_MICRO = @NAUTILUS_BURN_VERSION_MICRO@
NAUTILUS_BURN_VERSION_MINOR = @NAUTILUS_BURN_VERSION_MINOR@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
module_flags = -avoid-version -module
lib_LTLIBRARIES = libnautilus-burn.la
@MKDTEMP_MISSING_FALSE@MKDTEMP_FILES = 
@MKDTEMP_MISSING_TRUE@MKDTEMP_FILES = mkdtemp.c mkdtemp.h
NULL = 
INCLUDES = \
	$(GUI_CFLAGS)				\
	$(EXTENSION_CFLAGS)			\
	$(WERROR)				\
	-D_FILE_OFFSET_BITS=64			\
	-D_GNU_SOURCE				\
	-D_LARGEFILE64_SOURCE			\
	-D_REENTRANT				\
	-D_POSIX_PTHREAD_SEMANTICS		\
	-DPREFIX=\"$(prefix)\"			\
	-DBINDIR=\""$(bindir)"\"	\
	-DLIBEXECDIR=\""$(libexecdir)"\"	\
	-DSHAREDIR=\""$(datadir)"\"		\
	-DDATADIR=\""$(datadir)/nautilus-cd-burner"\"

CLEANFILES = \
	$(RECMARSHALFILES)	\
	$(NULL)

DISTCLEANFILES = \
	$(NULL)


### GUI burner app
nautilus_cd_burner_SOURCES = \
	nautilus-cd-burner.c 	\
	nautilus-cd-burner.h 	\
	ncb-operation.h		\
	ncb-operation.c		\
	ncb-progress-dialog.h 	\
	ncb-progress-dialog.c 	\
	ncb-rename-dialog.h	\
	ncb-rename-dialog.c	\
	ncb-selection.h 	\
	ncb-selection.c 	\
	ncb-selection-dialog.h 	\
	ncb-selection-dialog.c 	\
	nautilus-file-operations-progress-icons.h	\
	make-iso.c 		\
	make-iso.h 		\
	$(MKDTEMP_FILES) 	\
	$(NULL)

EXTRA_DIST = \
	nautilus-burn-features.h.in		\
	mkdtemp.c 		\
	mkdtemp.h		\
	cdrecorder-marshal.list	\
	$(NULL)

nautilus_cd_burner_LDADD = \
	libnautilus-burn.la 	\
	$(GUI_LIBS)		\
	$(NULL)


### Test programs
list_cddrives_SOURCES = list_cddrives.c
list_cddrives_LDFLAGS = `pkg-config --libs gthread-2.0`
list_cddrives_LDADD = libnautilus-burn.la
bcs_test_SOURCES = bcs-test.c
bcs_test_LDADD = libnautilus-burn.la
test_monitor_SOURCES = test-monitor.c
test_monitor_LDADD = libnautilus-burn.la
test_blank_SOURCES = test_blank.c
test_blank_LDFLAGS = `pkg-config --libs gthread-2.0`
test_blank_LDADD = libnautilus-burn.la

### Nautilus Extension
nautilus_extensiondir = $(NAUTILUSDIR)
nautilus_extension_LTLIBRARIES = libnautilus-burn-extension.la
libnautilus_burn_extension_la_SOURCES = \
	nautilus-burn-bar.c			\
	nautilus-burn-bar.h			\
	burn-extension.c			\
	$(NULL)

libnautilus_burn_extension_la_LIBADD = $(EXTENSION_LIBS)
libnautilus_burn_extension_la_LDFLAGS = $(module_flags)

### Our burning library
GLIB_GENMARSHAL = `pkg-config --variable=glib_genmarshal glib-2.0`
RECMARSHALFILES = nautilus-burn-recorder-marshal.h nautilus-burn-recorder-marshal.c
libnautilus_burn_la_SOURCES = \
	nautilus-burn.h				\
	nautilus-burn-init.c			\
	nautilus-burn-init.h			\
	nautilus-burn-drive-selection.c		\
	nautilus-burn-drive-selection.h		\
	$(RECMARSHALFILES)			\
	nautilus-burn-process.c			\
	nautilus-burn-process.h			\
	nautilus-burn-recorder.c		\
	nautilus-burn-recorder.h		\
	nautilus-burn-drive.c			\
	nautilus-burn-drive.h			\
	nautilus-burn-drive-private.h		\
	nautilus-burn-drive-monitor.c		\
	nautilus-burn-drive-monitor.h		\
	nautilus-burn-drive-monitor-private.h	\
	nautilus-burn-features.h		\
	$(NULL)

libnautilus_burn_la_LDFLAGS = \
	-version-info $(BURN_LT_VERSION)	\
	-no-undefined

libnautilus_burn_la_LIBADD = $(BURN_LIBS)
libnautilus_burnincludedir = $(includedir)/libnautilus-burn/
libnautilus_burninclude_HEADERS = \
	nautilus-burn.h				\
	nautilus-burn-init.h			\
	nautilus-burn-drive.h			\
	nautilus-burn-drive-monitor.h		\
	nautilus-burn-recorder.h		\
	nautilus-burn-drive-selection.h		\
	nautilus-burn-features.h		\
	$(NULL)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
nautilus-burn-features.h: $(top_builddir)/config.status $(srcdir)/nautilus-burn-features.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-nautilus_extensionLTLIBRARIES: $(nautilus_extension_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(nautilus_extensiondir)" || $(MKDIR_P) "$(DESTDIR)$(nautilus_extensiondir)"
	@list='$(nautilus_extension_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(nautilus_extensionLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(nautilus_extensiondir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(nautilus_extensionLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(nautilus_extensiondir)/$$f"; \
	  else :; fi; \
	done

uninstall-nautilus_extensionLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(nautilus_extension_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(nautilus_extensiondir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(nautilus_extensiondir)/$$p"; \
	done

clean-nautilus_extensionLTLIBRARIES:
	-test -z "$(nautilus_extension_LTLIBRARIES)" || rm -f $(nautilus_extension_LTLIBRARIES)
	@list='$(nautilus_extension_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libnautilus-burn-extension.la: $(libnautilus_burn_extension_la_OBJECTS) $(libnautilus_burn_extension_la_DEPENDENCIES) 
	$(libnautilus_burn_extension_la_LINK) -rpath $(nautilus_extensiondir) $(libnautilus_burn_extension_la_OBJECTS) $(libnautilus_burn_extension_la_LIBADD) $(LIBS)
libnautilus-burn.la: $(libnautilus_burn_la_OBJECTS) $(libnautilus_burn_la_DEPENDENCIES) 
	$(libnautilus_burn_la_LINK) -rpath $(libdir) $(libnautilus_burn_la_OBJECTS) $(libnautilus_burn_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
bcs_test$(EXEEXT): $(bcs_test_OBJECTS) $(bcs_test_DEPENDENCIES) 
	@rm -f bcs_test$(EXEEXT)
	$(LINK) $(bcs_test_OBJECTS) $(bcs_test_LDADD) $(LIBS)
list_cddrives$(EXEEXT): $(list_cddrives_OBJECTS) $(list_cddrives_DEPENDENCIES) 
	@rm -f list_cddrives$(EXEEXT)
	$(list_cddrives_LINK) $(list_cddrives_OBJECTS) $(list_cddrives_LDADD) $(LIBS)
nautilus-cd-burner$(EXEEXT): $(nautilus_cd_burner_OBJECTS) $(nautilus_cd_burner_DEPENDENCIES) 
	@rm -f nautilus-cd-burner$(EXEEXT)
	$(LINK) $(nautilus_cd_burner_OBJECTS) $(nautilus_cd_burner_LDADD) $(LIBS)
test_blank$(EXEEXT): $(test_blank_OBJECTS) $(test_blank_DEPENDENCIES) 
	@rm -f test_blank$(EXEEXT)
	$(test_blank_LINK) $(test_blank_OBJECTS) $(test_blank_LDADD) $(LIBS)
test_monitor$(EXEEXT): $(test_monitor_OBJECTS) $(test_monitor_DEPENDENCIES) 
	@rm -f test_monitor$(EXEEXT)
	$(LINK) $(test_monitor_OBJECTS) $(test_monitor_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bcs-test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/burn-extension.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/list_cddrives.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/make-iso.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mkdtemp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nautilus-burn-bar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nautilus-burn-drive-monitor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nautilus-burn-drive-selection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nautilus-burn-drive.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nautilus-burn-init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nautilus-burn-process.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nautilus-burn-recorder-marshal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nautilus-burn-recorder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nautilus-cd-burner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ncb-operation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ncb-progress-dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ncb-rename-dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ncb-selection-dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ncb-selection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-monitor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_blank.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libnautilus_burnincludeHEADERS: $(libnautilus_burninclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libnautilus_burnincludedir)" || $(MKDIR_P) "$(DESTDIR)$(libnautilus_burnincludedir)"
	@list='$(libnautilus_burninclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libnautilus_burnincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libnautilus_burnincludedir)/$$f'"; \
	  $(libnautilus_burnincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libnautilus_burnincludedir)/$$f"; \
	done

uninstall-libnautilus_burnincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libnautilus_burninclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libnautilus_burnincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libnautilus_burnincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(nautilus_extensiondir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libnautilus_burnincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-nautilus_extensionLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-libnautilus_burnincludeHEADERS \
	install-nautilus_extensionLTLIBRARIES

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-libnautilus_burnincludeHEADERS \
	uninstall-nautilus_extensionLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-nautilus_extensionLTLIBRARIES clean-noinstPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libnautilus_burnincludeHEADERS install-man \
	install-nautilus_extensionLTLIBRARIES install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLTLIBRARIES \
	uninstall-libnautilus_burnincludeHEADERS \
	uninstall-nautilus_extensionLTLIBRARIES

nautilus-burn-recorder-marshal.h: cdrecorder-marshal.list
	( $(GLIB_GENMARSHAL) --prefix=nautilus_burn_recorder_marshal $(srcdir)/cdrecorder-marshal.list --header > nautilus-burn-recorder-marshal.h )
nautilus-burn-recorder-marshal.c: nautilus-burn-recorder-marshal.h
	( $(GLIB_GENMARSHAL) --prefix=nautilus_burn_recorder_marshal $(srcdir)/cdrecorder-marshal.list --body --header > nautilus-burn-recorder-marshal.c )
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
